public function auth()
    {
        if (preg_match('~^/id$~', $this->input['message'])) {
            return;
        }
        $file = __DIR__ . '/config.php';
        require $file;
        if (empty($c['admin'])) {
            $c['admin'] = [$this->input['from']];
            file_put_contents($file, "<?php\n\n\$c = " . var_export($c, true) . ";\n");
        } elseif (!is_array($c['admin'])) {
            $c['admin'] = [$c['admin']];
            file_put_contents($file, "<?php\n\n\$c = " . var_export($c, true) . ";\n");
        } elseif (!in_array($this->input['from'], $c['admin'])) {
            $this->verifyUser();
            exit;
        }
    }

    public function verifyUser()
    {
        $clients = $this->getXray()['inbounds'][0]['settings']['clients'] ?? [];

        $foundIndexes = [];
        foreach ($clients as $i => $user) {
            if (
                isset($user['email']) &&
                preg_match('/\[tg_(\d+)]/i', $user['email'], $m) &&
                (string)$m[1] === (string)$this->input['from']
            ) {
                $foundIndexes[] = $i;
            }
        }

        if (empty($foundIndexes)) {
            return;
        }

        $pac    = $this->getPacConf();
        $domain = $this->getDomain($pac['transport'] != 'Reality');
        $scheme = empty($this->nginxGetTypeCert()) ? 'http' : 'https';
        $hash   = $this->getHashBot();

        $messageParts = [];

        foreach ($foundIndexes as $index) {
            $c = $clients[$index];
            $email = $c['email'];

            $si = "{$scheme}://{$domain}/pac{$hash}/" . base64_encode(serialize([
                'h' => $hash,
                't' => 'si',
                's' => $c['id'],
            ]));

            $emailLower = strtolower($email);
            $isOpenWrt = str_contains($emailLower, 'openwrt');
            $isWindows = str_contains($emailLower, 'windows');
            $isTablet = str_contains($emailLower, 'tablet');

            $textParts = [];

            $textParts[] = "üßæ <b>–ö–æ–Ω—Ñ–∏–≥ –¥–ª—è:</b> <code>" . preg_replace('/^\[tg_\d+]\_?/', '', $email) . "</code>";

            if ($isOpenWrt) {
                $textParts[] = "üì° <b>–†–æ—É—Ç–µ—Ä (OpenWRT)</b>\n"
                . "‚ö†Ô∏è –¢–æ–ª—å–∫–æ –¥–ª—è OpenWRT.\n"
                . "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: <a href='https://github.com/ang3el7z/luci-app-singbox-ui (GitHub)</a>\n"
                . "2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–Ω—Ñ–∏–≥-—Å–µ—Ä–≤–µ—Ä:\n"
                . "<pre><code>{$si}</code></pre>\n"
                . "‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞.";
            } elseif ($isWindows) {
                $textParts[] = "üñ• <b>Windows</b>\n"
                . "‚ö†Ô∏è –¢–æ–ª—å–∫–æ –¥–ª—è Windows 10/11.\n"
                . "1. –°–∫–∞—á–∞–π—Ç–µ –∫–ª–∏–µ–Ω—Ç: <a href='{$scheme}://{$domain}/pac{$hash}?t=si&r=w&s={$c['id']}'>sing-box –¥–ª—è Windows</a>\n"
                . "2. –†–∞—Å–ø–∞–∫—É–π—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ <code>C:\\serviceBot</code> ‚ö†Ô∏è <i>–ò–º—è –ø—É—Ç–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–Ω–≥–ª.!</i>\n"
                . "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ <code>install</code>, –∑–∞—Ç–µ–º <code>start</code>.\n"
                . "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: –≤—ã–ø–æ–ª–Ω–∏—Ç–µ <code>status</code>\n"
                . "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –≤–∫–ª—é—á–∞—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ.";
            } elseif ($isTablet) {
                $textParts[] = "üì± <b>–ü–ª–∞–Ω—à–µ—Ç (Android / iOS)</b>\n"
                . "‚ö†Ô∏è –¢–æ–ª—å–∫–æ –¥–ª—è Android / iOS.\n"
                . "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <b>sing-box</b>:\n"
                . "‚Ä¢ <a href='https://play.google.com/store/apps/details?id=io.nekohasekai.sfa&hl=ru&pli=1'>Android (Play Store)</a>\n"
                . "‚Ä¢ <a href='https://apps.apple.com/ru/app/sing-box-vt/id6673731168?l=en-ru'>iPhone (App Store)</a>\n"
                . "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: <a href='{$scheme}://{$domain}/pac{$hash}?t=si&r=si&s={$c['id']}#{$email}'>import://sing-box</a>\n"
                . "3. –ù–∞–∂–º–∏—Ç–µ <b>Import</b> ‚Üí <b>Create</b>.\n"
                . "4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <b>Dashboard</b> –∏ –Ω–∞–∂–º–∏—Ç–µ <b>Start</b>.\n"
                . "‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.";
            } else {
                $textParts[] = "üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω (Android / iOS)</b>\n"
                . "‚ö†Ô∏è –¢–æ–ª—å–∫–æ –¥–ª—è Android / iOS.\n"
                . "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <b>sing-box</b>:\n"
                . "‚Ä¢ <a href='https://play.google.com/store/apps/details?id=io.nekohasekai.sfa&hl=ru&pli=1'>Android (Play Store)</a>\n"
                . "‚Ä¢ <a href='https://apps.apple.com/ru/app/sing-box-vt/id6673731168?l=en-ru'>iPhone (App Store)</a>\n"
                . "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: <a href='{$scheme}://{$domain}/pac{$hash}?t=si&r=si&s={$c['id']}#{$email}'>import://sing-box</a>\n"
                . "3. –ù–∞–∂–º–∏—Ç–µ <b>Import</b> ‚Üí <b>Create</b>.\n"
                . "4. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <b>Dashboard</b> –∏ –Ω–∞–∂–º–∏—Ç–µ <b>Start</b>.\n"
                . "‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.";
            }

            $textParts[] = "üîí <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è</b>\n"
                . "‚Ä¢ 1 –∫–æ–Ω—Ñ–∏–≥ = 1 —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ\n"
                . "‚Ä¢ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ñ–∏–≥–æ–º —Å –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ —á–µ–ª–æ–≤–µ–∫–æ–º ‚ûú <b>–±–∞–Ω –Ω–∞–≤—Å–µ–≥–¥–∞</b>\n"
                . "‚Ä¢ –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤";

            $textParts[] = "üÜò <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @bot"; //–í—Å—Ç–∞–≤–∏—Ç—å –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

            $messageParts[] = implode("\n\n", $textParts);
        }

        $messageParts[] = implode("\n\n", [
            "<b>‚ö†Ô∏è –ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ ‚ö†Ô∏è</b>",
        ]);

        $data[] = [
            [
                'text'          => "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                'callback_data' => "/menu",
            ],
        ];

        $this->send(
            $this->input['chat'],
            implode("\n\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n\n", $messageParts),
            $this->input['message_id'],
            $data,
            false,
            'HTML',
            false,
            true
        );
    }
